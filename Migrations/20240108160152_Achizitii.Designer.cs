// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pandemie.Data;

#nullable disable

namespace pandemie.Migrations
{
    [DbContext(typeof(pandemieContext))]
    [Migration("20240108160152_Achizitii")]
    partial class Achizitii
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("pandemie.Models.Achizitie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_achizitie")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("Achizitie");
                });

            modelBuilder.Entity("pandemie.Models.Fond", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Ajutor_intreprinderi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Data_ordin")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Masti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Ordin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaraID")
                        .HasColumnType("int");

                    b.Property<decimal>("Testare")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Vaccinuri")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ID");

                    b.HasIndex("TaraID");

                    b.ToTable("Fond");
                });

            modelBuilder.Entity("pandemie.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("pandemie.Models.Producator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaraID")
                        .HasColumnType("int");

                    b.Property<int?>("VaccinID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TaraID");

                    b.HasIndex("VaccinID");

                    b.ToTable("Producator");
                });

            modelBuilder.Entity("pandemie.Models.Tara", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Cazuri")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Morti")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tara");
                });

            modelBuilder.Entity("pandemie.Models.Tip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume_tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tip");
                });

            modelBuilder.Entity("pandemie.Models.Vaccin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AchizitieID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_aprobare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Informatii")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret_achizitie")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.HasIndex("AchizitieID")
                        .IsUnique()
                        .HasFilter("[AchizitieID] IS NOT NULL");

                    b.ToTable("Vaccin");
                });

            modelBuilder.Entity("pandemie.Models.VaccinTip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("TipID")
                        .HasColumnType("int");

                    b.Property<int>("VaccinID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipID");

                    b.HasIndex("VaccinID");

                    b.ToTable("VaccinTip");
                });

            modelBuilder.Entity("pandemie.Models.Achizitie", b =>
                {
                    b.HasOne("pandemie.Models.Member", "Member")
                        .WithMany("Achizitii")
                        .HasForeignKey("MemberID");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("pandemie.Models.Fond", b =>
                {
                    b.HasOne("pandemie.Models.Tara", "Tara")
                        .WithMany("Fonduri")
                        .HasForeignKey("TaraID");

                    b.Navigation("Tara");
                });

            modelBuilder.Entity("pandemie.Models.Producator", b =>
                {
                    b.HasOne("pandemie.Models.Tara", "Tara")
                        .WithMany("Producatori")
                        .HasForeignKey("TaraID");

                    b.HasOne("pandemie.Models.Vaccin", "Vaccin")
                        .WithMany("Producatori")
                        .HasForeignKey("VaccinID");

                    b.Navigation("Tara");

                    b.Navigation("Vaccin");
                });

            modelBuilder.Entity("pandemie.Models.Vaccin", b =>
                {
                    b.HasOne("pandemie.Models.Achizitie", "Achizitie")
                        .WithOne("Vaccin")
                        .HasForeignKey("pandemie.Models.Vaccin", "AchizitieID");

                    b.Navigation("Achizitie");
                });

            modelBuilder.Entity("pandemie.Models.VaccinTip", b =>
                {
                    b.HasOne("pandemie.Models.Tip", "Tip")
                        .WithMany("VaccinTip")
                        .HasForeignKey("TipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pandemie.Models.Vaccin", "Vaccin")
                        .WithMany("VaccinTipuri")
                        .HasForeignKey("VaccinID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tip");

                    b.Navigation("Vaccin");
                });

            modelBuilder.Entity("pandemie.Models.Achizitie", b =>
                {
                    b.Navigation("Vaccin");
                });

            modelBuilder.Entity("pandemie.Models.Member", b =>
                {
                    b.Navigation("Achizitii");
                });

            modelBuilder.Entity("pandemie.Models.Tara", b =>
                {
                    b.Navigation("Fonduri");

                    b.Navigation("Producatori");
                });

            modelBuilder.Entity("pandemie.Models.Tip", b =>
                {
                    b.Navigation("VaccinTip");
                });

            modelBuilder.Entity("pandemie.Models.Vaccin", b =>
                {
                    b.Navigation("Producatori");

                    b.Navigation("VaccinTipuri");
                });
#pragma warning restore 612, 618
        }
    }
}
